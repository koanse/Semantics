<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DSDict" targetNamespace="http://tempuri.org/DSDict.xsd" xmlns:mstns="http://tempuri.org/DSDict.xsd" xmlns="http://tempuri.org/DSDict.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="dictConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="dictConnectionString (Settings)" PropertyReference="ApplicationSettings.SynParser.Properties.Settings.GlobalReference.Default.dictConnectionString" Provider="System.Data.OleDb" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupsTableAdapter" GeneratorDataComponentClassName="GroupsTableAdapter" Name="Groups" UserDataComponentName="GroupsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dictConnectionString (Settings)" DbObjectName="Groups" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `Groups` WHERE ((`gId` = ?) AND ((? = 1 AND `mwId` IS NULL) OR (`mwId` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_gId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="gId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_mwId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="mwId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_mwId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="mwId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `Groups` (`gId`, `mwId`) VALUES (?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="gId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="gId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="mwId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="mwId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT gId, mwId FROM Groups</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `Groups` SET `gId` = ?, `mwId` = ? WHERE ((`gId` = ?) AND ((? = 1 AND `mwId` IS NULL) OR (`mwId` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="gId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="gId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="mwId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="mwId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_gId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="gId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_mwId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="mwId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_mwId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="mwId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="gId" DataSetColumn="gId" />
              <Mapping SourceColumn="mwId" DataSetColumn="mwId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WGTableAdapter" GeneratorDataComponentClassName="WGTableAdapter" Name="WG" UserDataComponentName="WGTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dictConnectionString (Settings)" DbObjectName="WG" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `WG` WHERE ((`wId` = ?) AND (`gId` = ?))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_wId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="wId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_gId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="gId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `WG` (`wId`, `gId`) VALUES (?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="wId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="wId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="gId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="gId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT wId, gId FROM WG</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `WG` SET `wId` = ?, `gId` = ? WHERE ((`wId` = ?) AND (`gId` = ?))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="wId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="wId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="gId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="gId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_wId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="wId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_gId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="gId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="wId" DataSetColumn="wId" />
              <Mapping SourceColumn="gId" DataSetColumn="gId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WordsTableAdapter" GeneratorDataComponentClassName="WordsTableAdapter" Name="Words" UserDataComponentName="WordsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dictConnectionString (Settings)" DbObjectName="Words" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `Words` WHERE ((`wId` = ?) AND ((? = 1 AND `word` IS NULL) OR (`word` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_wId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="wId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_word" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="word" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_word" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="word" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `Words` (`wId`, `word`) VALUES (?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="wId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="wId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="word" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="word" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT wId, word FROM Words</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `Words` SET `wId` = ?, `word` = ? WHERE ((`wId` = ?) AND ((? = 1 AND `word` IS NULL) OR (`word` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="wId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="wId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="word" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="word" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_wId" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="wId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_word" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="word" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_word" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="word" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="wId" DataSetColumn="wId" />
              <Mapping SourceColumn="word" DataSetColumn="word" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DSDict" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="DSDict" msprop:Generator_DataSetName="DSDict" msprop:EnableTableAdapterManager="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Groups" msprop:Generator_UserTableName="Groups" msprop:Generator_RowDeletedName="GroupsRowDeleted" msprop:Generator_RowChangedName="GroupsRowChanged" msprop:Generator_RowClassName="GroupsRow" msprop:Generator_RowChangingName="GroupsRowChanging" msprop:Generator_RowEvArgName="GroupsRowChangeEvent" msprop:Generator_RowEvHandlerName="GroupsRowChangeEventHandler" msprop:Generator_TableClassName="GroupsDataTable" msprop:Generator_TableVarName="tableGroups" msprop:Generator_RowDeletingName="GroupsRowDeleting" msprop:Generator_TablePropName="Groups">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="gId" msprop:Generator_UserColumnName="gId" msprop:Generator_ColumnVarNameInTable="columngId" msprop:Generator_ColumnPropNameInRow="gId" msprop:Generator_ColumnPropNameInTable="gIdColumn" type="xs:int" />
              <xs:element name="mwId" msprop:Generator_UserColumnName="mwId" msprop:Generator_ColumnVarNameInTable="columnmwId" msprop:Generator_ColumnPropNameInRow="mwId" msprop:Generator_ColumnPropNameInTable="mwIdColumn" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="WG" msprop:Generator_UserTableName="WG" msprop:Generator_RowDeletedName="WGRowDeleted" msprop:Generator_RowChangedName="WGRowChanged" msprop:Generator_RowClassName="WGRow" msprop:Generator_RowChangingName="WGRowChanging" msprop:Generator_RowEvArgName="WGRowChangeEvent" msprop:Generator_RowEvHandlerName="WGRowChangeEventHandler" msprop:Generator_TableClassName="WGDataTable" msprop:Generator_TableVarName="tableWG" msprop:Generator_RowDeletingName="WGRowDeleting" msprop:Generator_TablePropName="WG">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="wId" msprop:Generator_UserColumnName="wId" msprop:Generator_ColumnVarNameInTable="columnwId" msprop:Generator_ColumnPropNameInRow="wId" msprop:Generator_ColumnPropNameInTable="wIdColumn" type="xs:int" />
              <xs:element name="gId" msprop:Generator_UserColumnName="gId" msprop:Generator_ColumnVarNameInTable="columngId" msprop:Generator_ColumnPropNameInRow="gId" msprop:Generator_ColumnPropNameInTable="gIdColumn" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Words" msprop:Generator_UserTableName="Words" msprop:Generator_RowDeletedName="WordsRowDeleted" msprop:Generator_RowChangedName="WordsRowChanged" msprop:Generator_RowClassName="WordsRow" msprop:Generator_RowChangingName="WordsRowChanging" msprop:Generator_RowEvArgName="WordsRowChangeEvent" msprop:Generator_RowEvHandlerName="WordsRowChangeEventHandler" msprop:Generator_TableClassName="WordsDataTable" msprop:Generator_TableVarName="tableWords" msprop:Generator_RowDeletingName="WordsRowDeleting" msprop:Generator_TablePropName="Words">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="wId" msprop:Generator_UserColumnName="wId" msprop:Generator_ColumnVarNameInTable="columnwId" msprop:Generator_ColumnPropNameInRow="wId" msprop:Generator_ColumnPropNameInTable="wIdColumn" type="xs:int" />
              <xs:element name="word" msprop:Generator_UserColumnName="word" msprop:Generator_ColumnVarNameInTable="columnword" msprop:Generator_ColumnPropNameInRow="word" msprop:Generator_ColumnPropNameInTable="wordColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Groups" />
      <xs:field xpath="mstns:gId" />
    </xs:unique>
    <xs:unique name="WG_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:WG" />
      <xs:field xpath="mstns:wId" />
      <xs:field xpath="mstns:gId" />
    </xs:unique>
    <xs:unique name="Words_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Words" />
      <xs:field xpath="mstns:wId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="WordsGroups" msdata:parent="Words" msdata:child="Groups" msdata:parentkey="wId" msdata:childkey="mwId" msprop:Generator_UserRelationName="WordsGroups" msprop:Generator_RelationVarName="relationWordsGroups" msprop:Generator_UserChildTable="Groups" msprop:Generator_UserParentTable="Words" msprop:Generator_ParentPropName="WordsRow" msprop:Generator_ChildPropName="GetGroupsRows" />
      <msdata:Relationship name="GroupsWG" msdata:parent="Groups" msdata:child="WG" msdata:parentkey="gId" msdata:childkey="gId" msprop:Generator_UserRelationName="GroupsWG" msprop:Generator_RelationVarName="relationGroupsWG" msprop:Generator_UserChildTable="WG" msprop:Generator_UserParentTable="Groups" msprop:Generator_ParentPropName="GroupsRow" msprop:Generator_ChildPropName="GetWGRows" />
      <msdata:Relationship name="WordsWG" msdata:parent="Words" msdata:child="WG" msdata:parentkey="wId" msdata:childkey="wId" msprop:Generator_UserRelationName="WordsWG" msprop:Generator_RelationVarName="relationWordsWG" msprop:Generator_UserChildTable="WG" msprop:Generator_UserParentTable="Words" msprop:Generator_ParentPropName="WordsRow" msprop:Generator_ChildPropName="GetWGRows" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>